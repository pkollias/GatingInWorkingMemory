{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid103\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww25360\viewh18160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Module for analyzing neurophysiology data of Gating In Working Memory project\
\
\
The program starts with a database of parsed dataframes from Matlab:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}sessions\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}columns: ['Session', 'Subject', 'Date', 'SessID', 'Sorter', 'CorrectTrials', 'ChannelCount',\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\cf0 		'bhv', 'NSx', 'Paused', 'Sleep', 'EncodeBug', 'BitcodeBug', 'NEVCut', 'NS4Cut',\
		'Sort', 'TimeStamps', 'StartTime', 'Valid', 'Comments', 'DateStamp']\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}index: Session\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}trials\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}columns: [\'91Index', 'Session', 'TrialNum', 'Prev', 'Next', 'NumRewards', 'ReactionTime', 'Cue', 'Stim',\
{\listtext	\uc0\u8259 	} 'StageNum', 'NumDist', 'StopCondition', 'Response', 'TargetStim', 'NumPre', 'NumPost\'92, \
{\listtext	\uc0\u8259 	}\'91TrialStart\'92, \'91TrialEnd\'92, \'91StimOff\'92, \'91FixAcq\'92, \'91FixBreak\'92, \'91BarAcq\'92, \'91BarRelease\'92, \'91RewardOn\'92, \'91RewardOff\'92]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl2\cf0 {\listtext	\uc0\u8259 	}TrialStart: TimeStamp of ITI onset\
{\listtext	\uc0\u8259 	}TrialEnd: TimeStamp of trial end GetSecs generated by Matlab\
{\listtext	\uc0\u8259 	}StimOff: TimeStamp of last stimulus/event offset time. Extrapolated for days that photodiode did not work\
{\listtext	\uc0\u8259 	}Fix/Bar*: TimeStamps for behavioral events based on Trigger Encodes\
{\listtext	\uc0\u8259 	}RewardOn: TimeStamp based on StopCondition trigger + 20ms\
{\listtext	\uc0\u8259 	}RewardOff: TimeStamp based on RewardOn + NumDrops*(Pulse+InterReward Delay)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}index: Session, TrialNum\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}events\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}columns: ['Session', 'TrialNum', 'StageIndex', 'StageCode', 'StageStim', 'StageEncodeIndex',\
{\listtext	\uc0\u8259 	}'StageBitcodeIndex', 'StageStimCategory', 'StageStimDelayCategory',\
{\listtext	\uc0\u8259 	}'StageCategory', 'StageTimeIndex', 'StageDuration']\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl2\cf0 {\listtext	\uc0\u8259 	}StageCode: encode value coming from Matlab specs [2 11 10 8], NaN for errors\
{\listtext	\uc0\u8259 	}Stimulus integer coming from Matlab, -1 values for non stimulus stages and NaN for errors\
{\listtext	\uc0\u8259 	}*Stage*codeIndex: raw signal timestamp of event from encode or bitcode cutting, NaN for errors\
{\listtext	\uc0\u8259 	}StageStimCategory: stimulus category - FIX for fixation and delay, CXX for cues, SXX for stimuli, NaN for errors\
{\listtext	\uc0\u8259 	}StageStimDelayCategory: CXX or SXX for stimulus preceding delay period, NaN for all other rows\
{\listtext	\uc0\u8259 	}StageCategory: FixOnset, CueOnset, CueDelay, StimOnset, StimDelay, essentially unpacking of StageCode delay code, Nan for errors\
{\listtext	\uc0\u8259 	}StageTimeIndex: final event raw signal timestamp to be used for analyses (either bitcode or extrapolated from encode)\
{\listtext	\uc0\u8259 	}StageDuration: time until next event if next event is known. Can limit end stages to reaction time or more generally obtain from bhv\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}index: Session, TrialNum, StageIndex\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}units\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}columns: ['Session', 'ChanNum', 'Area', 'ChanType', 'ChanGrp', 'UnitNum', 'NumSpikes', 'RatingComment', 'RatingCode\'92]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl2\cf0 {\listtext	\uc0\u8259 	}RatingCode: 1, 2, 3 -> good, ambiguous, bad +3 for shape/axons, 7 for MUA\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}index: Session, ChanNum, UnitNum\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 {\listtext	\uc0\u8226 	}conditions\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\ls2\ilvl1\cf0 {\listtext	\uc0\u8259 	}columns: ['Session', 'TrialNum', 'StageIndex\'92, \'91GatingCond\'92, \'91GatingCondSpecialized, \'91StageStimExtended\'92, \'91StageStimSpecialized\'92, \'91PostDistCategory\'92]\
{\listtext	\uc0\u8259 	}index: Session, TrialNum, StageIndex\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9357\tx10075\tx10794\tx11525\tx12237\pardirnatural\partightenfactor0
\cf0 \
Dataframes have a reset index when saved to disk. Index columns can be found in metadata class and should be set every time table is loaded and reset ideally when table is saved using the table_saver method\
\
\
[GatingCond: Gating, Pre, Post - drop Cue, Target] * [StageCategory] * [StimCategory] * [StimDelayCategory]\
\
Gating		Onset		Stim1 / 2 / 3 / 4 / 0\
		Delay\
\
============\
\
Pipeline:\
\
[import preprocessing, import spikesorting] -> [import_conditions] -> \'85\
	[condition_firing_rate_]\
	[behunit_FR] -> [anova_wrangle_FR] -> [anova_time_FR] -> [anova_cluster_FR] -> [] - > [plots_]\
\
\
============\
\
behunit_gatingcondFR output\
\
* df columns [sess, unit, chan, trial, stage, FR]\
\
* timebin_fr_list -> timebin_value (25 / 50 / 100) ->\
	stage (Cue / CueDelay / PreDist / \'85) ->\
		[((sess, unit, chan, trial, stage), [fr_0, fr_1, fr_2, \'85])\'85]\
\
\'97\'97\
\
anova pipeline output\
\
* window_results df:\
means -> x_i (GatingCondSpecialized / StageStimExtended / GatingCondSpecialized:StageStimExtended)\
anova\
shuffles\
\
* time_results df:\
y (GatingCondFR_binBBBBms_stepSSSSms_TTTT_TTTT / \'85) ->\
	event_window\
	results ->\
		<same as unit_results df above>\
\
* cluster_results df:\
timebin_value (25 / 50 / 100) -> x_i (GatingCondSpecialized / GatingCondSpecialized:StageStimExtended / GatingCluster / StimCluster) ->\
	omega_sq_distribution -> \{-50: [0.0003425, -0.000321, \'85], -25: [\'85], \'85)\
	percentile_list -> perc (95 / 97.5) ->\
		threshold\
		timebin_list -> \{\'91observed\'92: [(-50, -0.0007865, 0, False, -4.22314), (-25,\'85), \'85], \'91shuffle_0000\'92: (timebin, omega_sq, above_threshold, cluster_member, zscore), (), \'85\}\
		cluster_timebins ->\
			cluster_percentile_list (95 / 97.5) ->	[[50, 75, 100], [200, 225], \'85]\
\
* entry_list:\
[(u_iloc, area, window_selective, \{\
					timebin (50): \{\'91timebin\'92: [-50, -25, \'85 950],\
							 \'91zscores\'92: [val_-50, val_-25, \'85 val_950],\
							 \'91cluster\'92: [F, F, \'85 T],\
							 \'91cluster_\'85\'92: [F, F, \'85 F],\
							 \'91onset\'92: val,\
							 \'91onset_\'85\'92: val\})]\
\
\
\
\
\
\'97\'97\
\
* behunit\
arguments:\
(u_iloc, timebin, timestep, t_start, t_end)\
output:\
\{(sess, channum, unitnum):	[0.0, 0.0, 0.2, \'85 0.0], \'85\
\}\
\
* anova_wrangle\
arguments:\
(u_iloc, version_fr, timebin, timestep, t_start, t_end, valid_thr, selection_dict, levels_dict, group_column_list)\
output:\
\{\'91df\'92:				pd.DataFrame() - index: [selection_val], columns: [session, trialnum, stage_index, x_factor_val, x_group_val, fr_list],\
 \'91selection_df\'92: 		\{\'91selection_i\'92:			pd.DataFrame() - index: [], columns: [session, trialnum, stage_index, x_factor_val, x_group_val, fr_list]\
				\},\
 \'91counts\'92: 			pd.DataFrame() - index: [selection, x_factor], columns: [count_val],\
 \'91num_envets\'92:		int (min(counts)),\
 \'91valid\'92:			bool (num_events >= thr)\
\}\
\
* anova_time\
arguments:\
(u_iloc, selection, shuffles, version_fr, timebin, timestep, t_start, t_end, levels_dict, group_column_list)\
output:\
\{\'91bin_xxxx\'92:			\{\'91results\'92:			\{\'91means:\'92			pd.DataFrame() - index: [x_factor], columns: [mean_fr],\
								 \'91anova\'92:			pd.DataFrame() - index: [C(x_factor), \'85, Residual], columns: [sum_sq, df, F, PR(>F), omega_sq],\
								 \'91shuffles\'92: 			pd.DataFrame() - index: [shuffle_name], columns: [x_i_omega_sq_val, \'85]\
								\},\
				 \'91bin_onset\'92: 			integer\
				\}\
\}\
\
* anova_cluster\
arguments:\
(u_iloc, selection, shuffles, version_fr, timebin, timestep, t_start, t_end, omega_percentile, cluster_percentile, x_factors)\
output:\
\{\'91x_i\'92:				\{\'91omega\'92: 			\{nnnn:				\{\'91valid\'92:			bool,\
												 \'91omega_sq_distr\'92:		pd.Series() - index: [shuffle_name], column: [omega_sq_val],\
												 \'91omega_sq_observed\'92:	float,\
												 \'91threshold\'92:			float (95th percentile over distr),\
												 \'91omega_sq_diff\'92:		pd.Series() - index: [shuffle_name], column: [omega_sq_val-threshold],\
												 \'92zscore\'92:			float ((omega_sq_observed-mean)/std),\
												\}\
								\},\
				 \'91cluster_val_distr\'92: 		[0.012, 0.143, -0.00043, \'85],\
				 \'91cluster_threshold\'92: 		float (95th percentile over distr),\
				 \'91clusters\'92:			[[275, 300, 325], [375, 400, 425, 450], \'85]\
\}\
\
* anova_consolidate\
arguments:\
()\
output:\
\{\'91valid\'92:\
 \'91clusters\'92:\
 \'91zscore_list\'92\
\}}